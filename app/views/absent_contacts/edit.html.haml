-# absent_contact#edit
.wrapper
  .sideBar
    .sideBar__userBox
      %h6 ログイン中のユーザー
      .sideBar__userBox__userName 
        = current_user.parent_name
    .sideBar__logOutBox
      = link_to 'ログアウト', destroy_user_session_path, method: :delete, class: "logOutBtn"
    - if current_user.admin?
      .sideBar__roomIndex
        .RoomIndex
          - @rooms.each do |r|
            %ul
              %li
                = link_to room_path(r), class: "roomNumberLink" do
                  = r.number
              - if current_user && current_user.admin? && ( AbsentContact.includes(:room).where(room_id: r.id, t_checked: false).count != 0 )
                .noticeImage
                  %i.far.fa-paper-plane
                  .yet_notice_count
                    = AbsentContact.includes(:room).where(room_id: r.id, t_checked: false).count

  .infoArea
    .infoArea__infoHead
      =render 'contact_books/headButtonLinks'

    .infoArea__infoMenu
      %ul.breadCrumbsLink
        %li
          = link_to 'HOME', root_path, class: "roomSelectBtn"
        %li
          %i.fa.fa-chevron-right
        %li
          = link_to '欠席連絡', room_absent_contacts_path(@room.id), class: "roomSelectBtn"
        %li
          %i.fa.fa-chevron-right
        %li
          %p.letterSelect 欠席連絡編集
      
    .infoArea__AbsentContact
      .infoArea__AbsentContact__contactsHistory
        .infoArea__AbsentContact__contactsHistory__title
          連絡編集フォーム
        .infoArea__AbsentContact__contactsHistory__FormBox
          = form_with model: [@room, @absent_contact], class: "IputForm", local: true do |f|
            .InputBox
              .absentAt
                日付：
                = f.date_field :absent_at, class: "inputAbsentAT"
              .absentKind
                種類：
                = f.select :kind, AbsentContact.kinds_i18n.invert, {}, class: "inputKind"
              .absentReason
                理由・連絡：
                = f.text_area :reason, class: "inputReason"
              .afterContact
                放課後担任から連絡が
                = f.select :after_contact, AbsentContact.after_contacts_i18n.invert, {}, class: "inputAfterContact"
              .SubmitBtn
                = f.submit '送信', class: "submit-btn" 